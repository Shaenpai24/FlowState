rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if user is admin
    function isAdmin() {
      return request.auth != null && 
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Users collection
    match /users/{userId} {
      // Users can read/write their own user document
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // Admins can read all user documents
      allow read: if isAdmin();
    }
    
    // Feedback collection
    match /feedback/{feedbackId} {
      // Anyone can create feedback (even anonymous users)
      allow create: if true;
      
      // Admins can read all feedback
      // Users can read their own feedback (if they have userId)
      allow read: if isAdmin() || 
                     (request.auth != null && resource.data.userId == request.auth.uid);
      
      // Only admins can update feedback (change status, etc.)
      allow update: if isAdmin();
      
      // Only admins can delete feedback
      allow delete: if isAdmin();
      
      // Responses subcollection
      match /responses/{responseId} {
        // Users can read responses to their feedback, admins can read all
        allow read: if request.auth != null && 
          (get(/databases/$(database)/documents/feedback/$(feedbackId)).data.userId == request.auth.uid 
           || isAdmin());
        
        // Only admins can create responses
        allow create: if isAdmin();
        
        // Only the admin who created can update their response
        allow update: if isAdmin() && 
          resource.data.adminId == request.auth.uid;
        
        // Only admins can delete responses
        allow delete: if isAdmin();
      }
    }
  }
}
